<launch>

  <arg name="uav_name" default="$(optenv UAV_NAME uav1)"/>
  <arg name="debug" default="false" />
  <arg name="print_debug" default="true" />
  <arg name="WORLD_FILE" default="$(optenv WORLD_FILE)" />
  <arg name="WORLD_NAME" default="$(optenv WORLD_NAME)" />

  <arg unless="$(arg debug)" name="launch_prefix" value=""/>
  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch"/>

  <arg if="$(eval arg('WORLD_FILE') == '' and arg('WORLD_NAME') != '')" name="world_file" value="$(find mrs_general)/config/world_$(env WORLD_NAME).yaml" />
  <arg if="$(eval arg('WORLD_FILE') == '' and arg('WORLD_NAME') == '' and arg('RUN_TYPE') == 'simulation')" name="world_file" value="$(find mrs_general)/config/world_simulation.yaml" />
  <arg if="$(eval arg('WORLD_FILE') != '')" name="world_file" value="$(arg WORLD_FILE)" />

  <group if="$(arg print_debug)">
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find balloon_planner)/config/rosconsole/debug.conf"/>
  </group>

  <group ns="$(arg uav_name)">

    <node pkg="nodelet" type="nodelet" name="balloon_planner" args="standalone balloon_planner/BalloonPlanner" output="screen" launch-prefix="$(arg launch_prefix)" >

      <param name="uav_name" type="string" value="$(arg uav_name)" />
      <param name="uav_frame_id" type="string" value="$(arg uav_name)/fcu" />
      <param name="world_frame_id" type="string" value="$(arg uav_name)/gps_origin" />
      <param name="arena_frame_id" type="string" value="$(arg uav_name)/gps_origin" />
      <rosparam file="$(find balloon_planner)/config/plan_params.yaml" command="load" />
      <rosparam file="$(arg world_file)" command="load" />

      <!-- Subscribers -->
      <remap from="~ball_detection" to="uav_detection/detection" />
      <remap from="~ball_prediction" to="balloon_filter/prediction" />
      <remap from="~ball_passthrough" to="balloon_filter/line_endpose" />
      <remap from="~cmd_odom" to="control_manager/cmd_odom" />
      <remap from="~main_odom" to="odometry/odom_main" />
      <remap from="~tracker_diagnostics" to="control_manager/mpc_tracker/diagnostics" />

      <!-- Publishers -->
      <!-- <remap from="~commanded_trajectory" to="~commanded_trajectory" /> -->
      <remap from="~commanded_trajectory" to="control_manager/mpc_tracker/set_trajectory" />
      <remap from="~debug_trajectory" to="~debug_trajectory" />
      <remap from="~ball_positions" to="~ball_positions" />
      <remap from="~lurking_points" to="~lurking_points" />
      <remap from="~lurking_position" to="~lurking_position" />

      <!-- Services -->
      <remap from="~reset_balloon_filter" to="balloon_filter/reset_estimates" />
      <remap from="~set_constraints" to="constraint_manager/set_constraints" />
      <remap from="~land_there" to="constraint_manager/land_there" />

    </node>

  </group>

</launch>

